generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                String   @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?  @db.Text
  access_token      String?  @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?  @db.Text
  session_state     String?
  createdAt         DateTime @default(now()) @map(name: "created_at")
  updatedAt         DateTime @default(now()) @map(name: "updated_at")

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@map(name: "accounts")
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map(name: "sessions")
}

model User {
  id            String   @id @default(cuid())
  name          String?
  email         String?  @unique
  password      String
  image         String?
  createdAt     DateTime @default(now()) @map(name: "created_at")
  updatedAt     DateTime @default(now()) @map(name: "updated_at")
  remainingGens Int      @default(15)

  apiKey   ApiKey[]
  apiKeyId String?

  accounts Account[]
  sessions Session[]

  @@map(name: "users")
}

model ApiKey {
  id      String  @id @default(cuid())
  key     String  @unique
  name    String  @unique
  enabled Boolean @default(true)
  User    User    @relation(fields: [userId], references: [id])
  userId  String

  @@unique([userId, key, enabled])
  @@map(name: "api-key")
}
